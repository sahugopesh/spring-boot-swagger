/*
 * Provider API Documentation
 * Anthem Modernize Migration Microservices Provider API Documentation
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.anthem.provider.domain;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * RenderingData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-11T21:07:21.986Z")
public class RenderingData {
  @JsonProperty("renderingDate")
  private List<Long> renderingDate = null;

  @JsonProperty("renderingKey")
  private String renderingKey = null;

  @JsonProperty("renderingNumber")
  private String renderingNumber = null;

  @JsonProperty("renderingSource")
  private String renderingSource = null;

  @JsonProperty("renderingState")
  private String renderingState = null;

  @JsonProperty("renderingStateCode")
  private String renderingStateCode = null;

  @JsonProperty("renderingType")
  private String renderingType = null;

  public RenderingData renderingDate(List<Long> renderingDate) {
    this.renderingDate = renderingDate;
    return this;
  }

  public RenderingData addRenderingDateItem(Long renderingDateItem) {
    if (this.renderingDate == null) {
      this.renderingDate = new ArrayList<Long>();
    }
    this.renderingDate.add(renderingDateItem);
    return this;
  }

   /**
   * Rendering dates
   * @return renderingDate
  **/
  @ApiModelProperty(value = "Rendering dates")
  public List<Long> getRenderingDate() {
    return renderingDate;
  }

  public void setRenderingDate(List<Long> renderingDate) {
    this.renderingDate = renderingDate;
  }

  public RenderingData renderingKey(String renderingKey) {
    this.renderingKey = renderingKey;
    return this;
  }

   /**
   * Rendering key
   * @return renderingKey
  **/
  @ApiModelProperty(value = "Rendering key")
  public String getRenderingKey() {
    return renderingKey;
  }

  public void setRenderingKey(String renderingKey) {
    this.renderingKey = renderingKey;
  }

  public RenderingData renderingNumber(String renderingNumber) {
    this.renderingNumber = renderingNumber;
    return this;
  }

   /**
   * LIC number
   * @return renderingNumber
  **/
  @ApiModelProperty(value = "LIC number")
  public String getRenderingNumber() {
    return renderingNumber;
  }

  public void setRenderingNumber(String renderingNumber) {
    this.renderingNumber = renderingNumber;
  }

  public RenderingData renderingSource(String renderingSource) {
    this.renderingSource = renderingSource;
    return this;
  }

   /**
   * HMO or LIC or RTAX
   * @return renderingSource
  **/
  @ApiModelProperty(value = "HMO or LIC or RTAX")
  public String getRenderingSource() {
    return renderingSource;
  }

  public void setRenderingSource(String renderingSource) {
    this.renderingSource = renderingSource;
  }

  public RenderingData renderingState(String renderingState) {
    this.renderingState = renderingState;
    return this;
  }

   /**
   * Rendering state
   * @return renderingState
  **/
  @ApiModelProperty(value = "Rendering state")
  public String getRenderingState() {
    return renderingState;
  }

  public void setRenderingState(String renderingState) {
    this.renderingState = renderingState;
  }

  public RenderingData renderingStateCode(String renderingStateCode) {
    this.renderingStateCode = renderingStateCode;
    return this;
  }

   /**
   * Provider rendering state code
   * @return renderingStateCode
  **/
  @ApiModelProperty(value = "Provider rendering state code")
  public String getRenderingStateCode() {
    return renderingStateCode;
  }

  public void setRenderingStateCode(String renderingStateCode) {
    this.renderingStateCode = renderingStateCode;
  }

  public RenderingData renderingType(String renderingType) {
    this.renderingType = renderingType;
    return this;
  }

   /**
   * To handle any exceptions
   * @return renderingType
  **/
  @ApiModelProperty(value = "To handle any exceptions")
  public String getRenderingType() {
    return renderingType;
  }

  public void setRenderingType(String renderingType) {
    this.renderingType = renderingType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RenderingData renderingData = (RenderingData) o;
    return Objects.equals(this.renderingDate, renderingData.renderingDate) &&
        Objects.equals(this.renderingKey, renderingData.renderingKey) &&
        Objects.equals(this.renderingNumber, renderingData.renderingNumber) &&
        Objects.equals(this.renderingSource, renderingData.renderingSource) &&
        Objects.equals(this.renderingState, renderingData.renderingState) &&
        Objects.equals(this.renderingStateCode, renderingData.renderingStateCode) &&
        Objects.equals(this.renderingType, renderingData.renderingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(renderingDate, renderingKey, renderingNumber, renderingSource, renderingState, renderingStateCode, renderingType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RenderingData {\n");
    
    sb.append("    renderingDate: ").append(toIndentedString(renderingDate)).append("\n");
    sb.append("    renderingKey: ").append(toIndentedString(renderingKey)).append("\n");
    sb.append("    renderingNumber: ").append(toIndentedString(renderingNumber)).append("\n");
    sb.append("    renderingSource: ").append(toIndentedString(renderingSource)).append("\n");
    sb.append("    renderingState: ").append(toIndentedString(renderingState)).append("\n");
    sb.append("    renderingStateCode: ").append(toIndentedString(renderingStateCode)).append("\n");
    sb.append("    renderingType: ").append(toIndentedString(renderingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

